@model IEnumerable<OnlineShopWeb.Models.CartItem>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>Cart | E-Shopper</title>
    <link href="~/Content/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/Content/css/font-awesome.min.css" rel="stylesheet">
    <link href="~/Content/css/prettyPhoto.css" rel="stylesheet">
    <link href="~/Content/css/price-range.css" rel="stylesheet">
    <link href="~/Content/css/animate.css" rel="stylesheet">
    <link href="~/Content/css/main.css" rel="stylesheet">
    <link href="~/Content/css/responsive.css" rel="stylesheet">
    <link href="~/Content/css/footerCart.css" rel="stylesheet" />

    <script src="js/html5shiv.js"></script>
    <script src="js/respond.min.js"></script>

    <link rel="shortcut icon" href="images/ico/favicon.ico">
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="images/ico/apple-touch-icon-144-precomposed.png">
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="images/ico/apple-touch-icon-114-precomposed.png">
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="images/ico/apple-touch-icon-72-precomposed.png">
    <link rel="apple-touch-icon-precomposed" href="images/ico/apple-touch-icon-57-precomposed.png">

</head><!--/head-->

<body>
    <h1>@TempData["Message"]</h1>
    <section id="cart_items">
        <div class="container">
            <div class="breadcrumbs">
                <ol class="breadcrumb">
                    <li><a href="#">Home</a></li>
                    <li class="active">Shopping Cart</li>
                </ol>
            </div>
            <div class="table-responsive cart_info" id="load_data">
                <table class="table table-condensed">
                    <thead>
                        <tr class="cart_menu">
                            <td class="image">Item</td>
                            <td class="description"></td>
                            <td class="price">Price</td>
                            <td class="quantity">Quantity</td>
                            <td class="total">Total</td>
                            <td></td>
                        </tr>
                    </thead>
                    <tbody>

                        @{
                            var sum = decimal.Zero;
                        }

                        @if (Model != null && Model.Any())
                        {

                            foreach (var item in Model)
                            {
                                <tr id="trow_@item.ProductId">
                                    <td class="cart_product">
                                        <input type="checkbox" class="item-select" data-price="@item.TotalPrice" data-id="@item.ProductId">
                                        <a href=""><img src="@item.Product.Image" alt="ProductImage"></a>
                                    </td>
                                    <td class="cart_description">
                                        <h4><a href="">@item.Product.Name</a></h4>
                                    </td>
                                    <td class="cart_price">
                                        <p>@item.Price</p>
                                    </td>
                                    <td class="cart_quantity">
                                        <div class="cart_quantity_button">
                                            <a class="cart_quantity_up" data-id="@item.ProductId" href=""> + </a>
                                            <input class="cart_quantity_input" type="text" name="quantity" value="@item.Quantity" autocomplete="off" size="2">
                                            <a class="cart_quantity_down" data-id="@item.ProductId" href=""> - </a>
                                        </div>
                                    </td>
                                    <th class="cart_total">
                                        <p class="cart_total_price">@item.TotalPrice</p>
                                    </th>
                                    <td class="cart_delete">
                                        <a data-id="@item.ProductId" class="cart_quantity_delete" href="#"><i class="fa fa-times"></i></a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7">Your cart is empty!</td>
                            </tr>
                        }

                        <div class="fixed-footer">
                            <div class="actions">
                                <input type="checkbox" id="selectAll"> <label for="selectAll">Select All</label>
                                <div class="btn-group">
                                    <button class="btn btn-danger btnDeleteSelected">Delete Selected</button>
                                    <button class="btn btn-success btnPurchase">Checkout</button>
                                </div>
                            </div>
                            <div class="sum">
                                <strong>Sum:</strong> <span id="sum">@sum</span> VND
                            </div>
                        </div>

                    </tbody>
                </table>
            </div>
        </div>
    </section> <!--/#cart_items-->

    <script src="js/jquery.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/jquery.scrollUp.min.js"></script>
    <script src="js/jquery.prettyPhoto.js"></script>
    <script src="js/main.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const checkboxes = document.querySelectorAll('.item-select');
            const selectAll = document.getElementById('selectAll');
            const btnPurchase = document.querySelector('.btnPurchase');

            // Handle individual item selection
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function () {
                    updatePurchaseButtonVisibility();
                    updateSelectAllCheckbox();
                });
            });

            // Handle "Select All" functionality
            selectAll.addEventListener('change', function () {
                checkboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
                updatePurchaseButtonVisibility();
            });

            // Handle Checkout button click
            btnPurchase.addEventListener('click', function (e) {
                e.preventDefault();
                const selectedItems = Array.from(checkboxes)
                    .filter(checkbox => checkbox.checked)
                    .map(checkbox => {
                        const quantity = checkbox.closest('tr').querySelector('.cart_quantity_input').value;
                        return {
                            productId: checkbox.dataset.id,
                            quantity: quantity
                        };
                    });

                if (selectedItems.length === 0) {
                    alert("Please select at least one item to checkout.");
                    return;
                }

                // Send selected items to server
                $.ajax({
                    url: '@Url.Action("UpdateSelectedItems", "Cart")',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(selectedItems),
                    success: function (data) {
                        if (data.success) {
                            console.log("Session updated successfully.");
                            window.location.href = '@Url.Action("Checkout", "Order")';
                        } else {
                            alert("Failed to update the cart. Please try again.");
                        }
                    },
                    error: function () {
                        alert("An error occurred while updating the cart. Please try again.");
                    }
                });
            });

            // Update the visibility of the Checkout button
            function updatePurchaseButtonVisibility() {
                const anyChecked = Array.from(checkboxes).some(checkbox => checkbox.checked);
                btnPurchase.style.display = anyChecked ? 'block' : 'none';
            }

            // Update "Select All" checkbox state
            function updateSelectAllCheckbox() {
                const allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);
                selectAll.checked = allChecked;
            }

            // Initialize visibility and "Select All" state
            updatePurchaseButtonVisibility();
            updateSelectAllCheckbox();
        });
    </script>
</body>
</html>